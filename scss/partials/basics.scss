// SASS document
// Basic
// -------------------------------------------------
@import "../modules/colors";
@import "../modules/variables";
@import "../modules/mixins";

* {
  box-sizing: border-box;
}
html,
body {
  @include fontBasic;
  margin: 0;
}

body {
  display: flex;
  flex-direction: column;
  position: absolute;
  bottom: 0;
  top: 0;
  left: 0;
  right: 0;
  .imm-layout {
    flex-direction: column;
    position: absolute;
    top: 125px;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

a {
  @include linkStyling;
  &:hover {
    color: $immBlack;
  }
}

img {
  width: 100%;
  height: auto;
}

figure {
  margin: 0;
  height: 100%;
  img {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }
}

.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  word-break: normal;
}

main {
  margin: 0 auto;
  padding: 20px 40px;
  min-height: calc(100vh - (618px));
}

.btn {
  display: inline-block;
  width: 100%;
  margin-bottom: 0; // For input.btn
  font-weight: $immFont-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  white-space: nowrap;
  @include button-size(
    $padding-base-vertical,
    $padding-base-horizontal,
    $immFont-size,
    $immFont-lineHeight,
    0
  );
  @include prefixer(user-select, none, webkit moz ms);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: $imm-grey55;
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    @include prefixer(box-shadow, inset 0 3px 5px rgba(0, 0, 0, 0.125), webkit);
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    @include opacity(0.65);
    @include prefixer(box-shadow, none, webkit);
  }

  // [converter] extracted a& to a.btn
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}

.btn-default {
  @include button-variant(
    $btn-default-color,
    $btn-default-bg,
    $btn-default-border
  );
}

.btn-primary {
  @include button-variant(
    $btn-primary-color,
    $btn-primary-bg,
    $btn-primary-border
  );
}

// Success appears as green
.btn-success {
  @include button-variant(
    $btn-success-color,
    $btn-success-bg,
    $btn-success-border
  );
}

// Info appears as blue-green
.btn-info {
  @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
}

// Warning appears as orange
.btn-warning {
  @include button-variant(
    $btn-warning-color,
    $btn-warning-bg,
    $btn-warning-border
  );
}

// Danger and error appear as red
.btn-danger {
  @include button-variant(
    $btn-danger-color,
    $btn-danger-bg,
    $btn-danger-border
  );
}

// Button Sizes
// --------------------------------------------------
.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size(
    $padding-large-vertical,
    $padding-large-horizontal,
    $immFont-size,
    $immFont-lineHeight,
    0
  );
}

.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size(
    $padding-small-vertical,
    $padding-small-horizontal,
    $immFont-size,
    $immFont-lineHeight,
    0
  );
}

.btn-xs {
  @include button-size(
    $padding-xs-vertical,
    $padding-xs-horizontal,
    $immFont-size,
    $immFont-lineHeight,
    0
  );
}
